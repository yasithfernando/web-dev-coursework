/**----------------- Handle Order Details --------------------- */
const referenceNumber = document.getElementById('reference-number');
const description = document.getElementById('description');
const totalPrice = document.getElementById('total-price');
const itemList = document.getElementById('item-cards');
const total = document.getElementById('total-label');

let cart;

if(localStorage.getItem('cart')){
    cart = JSON.parse(localStorage.getItem('cart'));
    console.log(cart);

    referenceNumber.textContent = Math.floor(Math.random() * 100000);
    let desc = `You have ${cart.length} items in your cart`;
    
    description.textContent = desc;

    totalPrice.textContent = `USD ${localStorage.getItem('totalPrice')}`
}

//show product list
let listItem;
cart.forEach(product => {
    listItemContent = `<div class="item-name">${product.name}</div>
                <div class="item-quantity">Quantity: ${product.quantity}</div>
                <div class="item-price"> $${product.price}</div>
                <button class="rmv-btn">REMOVE</button> `
    listItem = document.createElement("li")
    listItem.innerHTML = listItemContent
    itemList.appendChild(listItem);
    
});

total.textContent = `$${localStorage.getItem('totalPrice')}`;

/**-------------------------------------- */

/**----------------- Validate Payment Details----------------------- */
//Regexes were generated by chatGPT
// Regex for card number validation
const cardNumberRegex = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\d{3})\d{11})$/;

// Regex for card name validation
const cardNameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;

// Regex for expiry month validation
const expiryMonthRegex = /^(0?[1-9]|1[0-2])$/;

// Regex for expiry year validation
const expiryYearRegex = /^(20)\d{2}$/;

// Regex for CVV validation
const cvvRegex = /^[0-9]{3,4}$/;

let cardNumberField = document.getElementById('card-number');
let cardNameField = document.getElementById('card-holder-name');
let expiryMonthField = document.getElementById('expiry-month');
let expiryYearField = document.getElementById('expiry-year')
let cvvField = document.getElementById('cvv');

cardNameField.addEventListener('click', (e)=>{
  if(!cardNumberRegex.test(cardNumberField.value)){
    cardNameField.setAttribute('placeholder', 'Invalid Card Number')
    //cardNameField.disabled = true;
    cardNumberField.classList.add('invalid');
  }
  else{
    cardNameField.removeAttribute('placeholder')
    //cardNameField.disabled= false;
    cardNumberField.classList.remove('invalid');
  }
})

cvvField.addEventListener('click', (e)=>{
  if(!expiryMonthRegex.test(expiryMonthField.value) || (!expiryYearRegex.test(expiryYearField.value))){
    cvvField.setAttribute('placeholder', 'Invalid Card Number')
    //cardNameField.disabled = true;
    expiryMonthField.classList.add('invalid');
    expiryYearField.classList.add('invalid');
  }
  else{
    cvvField.removeAttribute('placeholder')
    //cardNameField.disabled= false;
    expiryMonthField.classList.remove('invalid');
    expiryYearField.classList.remove('invalid');
  }
})

addEvent(expiryYearField);
addEvent(expiryMonthField);
addEvent(cardNumberField);

function addEvent(element){
  element.addEventListener('click', ()=>{
    element.classList.remove('invalid');
    cvvField.removeAttribute('placeholder')
    cardNameField.removeAttribute('placeholder')
  })
}

function validatePayment(){
  const cardNumber = cardNumberField.value;
  const cardName = cardNameField.value;
  const expiryMonth = expiryMonthField.value;
  const expiryYear = expiryYearField.value;
  const cvv = cvvField.value;

  if(cardNumber && cardName && expiryMonth && expiryYear && cvv){
    if(validatePaymentDetails(cardNumber,cardName,expiryMonth,expiryYear, cvv)){
      return true;
    }
    else{
      return false;
    }
  }
  return false;
}


function validatePaymentDetails(cardNumber, cardName, expiryMonth, expiryYear, cvv) {

  if (!cardNumberRegex.test(cardNumber)) {
    console.log("Invalid ard number")
    return false;
  }

  if (!cardNameRegex.test(cardName)) {
    console.log("Invalid card name");
    return false; 
  }

  if (!expiryMonthRegex.test(expiryMonth)) {
    console.log("Invalid expiry month");
    return false;
  }

  if (!expiryYearRegex.test(expiryYear)) {
    console.log("Invalid expiry year");
    return false;
  }

  if (!cvvRegex.test(cvv)) {
    console.log("Invalid CVV");
    return false;
  }

  return true;
}


/**------------------------------------------------------------------- */

/**----------------- Save Address Details----------------------------- */

let addressField = document.getElementById('address')

let addressOneField = document.getElementById('address-one');
let adddressTwoField = document.getElementById('address-two')
let adddressThreeField = document.getElementById('address-three')
let townField = document.getElementById('town')
let stateField = document.getElementById('state')
let postCodeField = document.getElementById('post-code')
let countryField = document.getElementById('country')

let saveAddressBtn = document.getElementById('save-address-button')
let cancelAddressBtn = document.getElementById('cancel-address-edit-button')

saveAddressBtn.addEventListener('click', ()=>{
  if(addressOneField.value && townField.value && postCodeField.value && countryField.value){
    let address = `${addressOneField.value}, ${townField.value}, ${postCodeField.value}, ${countryField.value}`
    addressField.textContent = address;
  }
  else{
    addressField.textContent = 'Please edit the address'
  }
  
})


const editAddress = document.querySelector('.edit-address');

cancelAddressBtn.addEventListener('click', ()=>{
  editAddress.classList.toggle('active');
  
  if(editAddress.classList.contains('active')){
    editButton[0].classList.toggle('collapsed');
    editButtonText[0].textContent = 'Close'
  }
  else{
    editButton[0].classList.toggle('collapsed');
    editButtonText[0].textContent = 'Edit'
    //editButton.textContent = "Edit";
  }
})

/**--------------------------------------------------------------------- */

/**----------------- Save Contact Details ------------------------------ */


let contactField = document.getElementById('contact')

let emailField = document.getElementById('email')
let phoneField = document.getElementById('phone')

let saveContactBtn = document.querySelector('.save-contact-button')
let cancelContactBtn = document. querySelector('.cancel-contact-edit-button')

saveContactBtn.addEventListener('click', ()=>{
  if(emailField.value && phoneField.value){
    let contact = `${emailField.value}`
    contactField.textContent = contact
  }
  else{
    contactField.textContent = 'Please edit the contact details';
  }
})


const editContact = document.querySelector('.edit-contact');

cancelContactBtn.addEventListener('click', ()=>{
  editContact.classList.toggle('active');
    
    if(editAddress.classList.contains('active')){
      editButton[1].classList.toggle('collapsed');
      editButtonText[1].textContent = 'Close'
    }
    else{
      editButton[1].classList.toggle('collapsed');
      editButtonText[1].textContent = 'Edit'
      //editButton.textContent = "Edit";
    }
})

/**--------------------------------------------------------------------- */





/**----------------- Handle Collapse Section --Start -------------------*/

const editButton = document.querySelectorAll('.edit-button');

const editButtonText = document.querySelectorAll('.edit-button-text')


editButton[0].addEventListener('click', function() {
  editAddress.classList.toggle('active');
  
  if(editAddress.classList.contains('active')){
    editButton[0].classList.toggle('collapsed');
    editButtonText[0].textContent = 'Close'
  }
  else{
    editButton[0].classList.toggle('collapsed');
    editButtonText[0].textContent = 'Edit'
    //editButton.textContent = "Edit";
  }

});

editButton[1].addEventListener('click', function() {
    editContact.classList.toggle('active');
    
    if(editContact.classList.contains('active')){
      editButton[1].classList.toggle('collapsed');
      editButtonText[1].textContent = 'Close'
    }
    else{
      editButton[1].classList.toggle('collapsed');
      editButtonText[1].textContent = 'Edit'
      //editButton.textContent = "Edit";
    }
  
  });


/**------------- Handle Collapse Section --End -----------------*/



